{"ast":null,"code":"import _toConsumableArray from\"C:/Users/pablo/Desktop/teste-dti/teste/my-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/pablo/Desktop/teste-dti/teste/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import{AppConteiner,BotaoAdd,BotaoDeletar,CardConteiner,CardLembrete,FormConteiner,FormConteudo,Input,SubTitulo,TextoLembrete,TituloForm,TitleDataLembrete}from'./EstiloLembrete';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Lembrete(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),nomeLembrete=_useState2[0],setNomeLembrete=_useState2[1];// useState salva o estado de qualquer tipo de dado\nvar _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),dataLembrete=_useState4[0],setDataLembrete=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),listaLembrete=_useState6[0],setListaLembrete=_useState6[1];//lista de lembrete\nfunction Add(e){e.preventDefault();// não deixa a tela atualizar\n/*pegar os dados que estão em nomeLembrete e dataLembrete\r\n        criar um objeto com eles {nomeLembrete, dataLembrete} \"lembrete\"*/if(nomeLembrete.length>0&&dataLembrete.length>0){var numeroId=Math.random();var lembrete={nome:nomeLembrete,data:new Date(dataLembrete),// converte para objeto Date\nid:numeroId};//salvar na lista de lembrete -> setListaLembrete(objeto)\nsetListaLembrete([].concat(_toConsumableArray(listaLembrete),[lembrete]));setNomeLembrete(\"\");setDataLembrete(\"\");//após a adição dos inputs, o valor (texto input) retorna para vazio\n}else{alert(\"Os campos devem estar preenchidos!\");}}function Deletar(id){var listaFiltrada=listaLembrete.filter(function(item){return item.id!==id;});//filtra a lista retirando o item pelo index\nsetListaLembrete(listaFiltrada);}function AlterarTexto(e){//essa função faz com que quando eu altero o texto no input estabelecido, ele pega a string (pois o value é o que está escrito no input)\n//e vai alterar o estado de nomeLembrete\nsetNomeLembrete(e.target.value);// altera o vlaor do nomeLembrete com o value que está no input\n}function AlterarData(e){setDataLembrete(e.target.value);}function SubmeterForm(e){//quando tiver um Evento de submeter (linha 55), o evento (submit) não recarregará a página\ne.preventDefault();}function AgruparLembretesPorData(lista){var grupos={};lista.forEach(function(lembrete){var data=new Date(lembrete.data);data.setDate(data.getDate()+1);// Adiciona 1 dia à data\nvar dia=data.getDate().toString().padStart(2,'0');var mes=(data.getMonth()+1).toString().padStart(2,'0');var ano=data.getFullYear().toString();var dataFormatada=\"\".concat(dia,\"/\").concat(mes,\"/\").concat(ano);if(!grupos[dataFormatada]){grupos[dataFormatada]=[];}grupos[dataFormatada].push(lembrete);});return grupos;}var LembretesPorData=AgruparLembretesPorData(listaLembrete);return/*#__PURE__*/_jsxs(AppConteiner,{children:[/*#__PURE__*/_jsx(TituloForm,{children:\"Novo Lembrete\"}),/*#__PURE__*/_jsx(FormConteiner,{onSubmit:SubmeterForm,children:/*#__PURE__*/_jsxs(FormConteudo,{children:[/*#__PURE__*/_jsx(Input,{type:\"text\",placeholder:\"Nome do lembrete\",onChange:AlterarTexto,value:nomeLembrete}),/*#__PURE__*/_jsx(Input,{type:\"date\",placeholder:\"Data do lembrete (no formato dd/mm/yyyy)\",onChange:AlterarData,value:dataLembrete}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(BotaoAdd,{onClick:Add,children:\"Adicionar\"})})]})}),/*#__PURE__*/_jsx(SubTitulo,{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Lista de Lembretes \\uD83D\\uDCCC\"})}),Object.keys(LembretesPorData).map(function(data){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(TitleDataLembrete,{children:data}),/*#__PURE__*/_jsx(CardConteiner,{children:LembretesPorData[data].map(function(lembrete){return/*#__PURE__*/_jsxs(CardLembrete,{children:[/*#__PURE__*/_jsxs(TextoLembrete,{children:[/*#__PURE__*/_jsx(\"p\",{children:lembrete.hora}),/*#__PURE__*/_jsx(\"p\",{children:lembrete.nome})]}),/*#__PURE__*/_jsx(BotaoDeletar,{onClick:function onClick(){return Deletar(lembrete.id);},children:\"X\"})]},lembrete.id);})})]},data);})]});}export default Lembrete;","map":{"version":3,"names":["useState","AppConteiner","BotaoAdd","BotaoDeletar","CardConteiner","CardLembrete","FormConteiner","FormConteudo","Input","SubTitulo","TextoLembrete","TituloForm","TitleDataLembrete","jsx","_jsx","jsxs","_jsxs","Lembrete","_useState","_useState2","_slicedToArray","nomeLembrete","setNomeLembrete","_useState3","_useState4","dataLembrete","setDataLembrete","_useState5","_useState6","listaLembrete","setListaLembrete","Add","e","preventDefault","length","numeroId","Math","random","lembrete","nome","data","Date","id","concat","_toConsumableArray","alert","Deletar","listaFiltrada","filter","item","AlterarTexto","target","value","AlterarData","SubmeterForm","AgruparLembretesPorData","lista","grupos","forEach","setDate","getDate","dia","toString","padStart","mes","getMonth","ano","getFullYear","dataFormatada","push","LembretesPorData","children","onSubmit","type","placeholder","onChange","onClick","Object","keys","map","hora"],"sources":["C:/Users/pablo/Desktop/teste-dti/teste/my-app/PabloMafra.github.io/app-lembrete/src/components/lembrete/index.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { AppConteiner, BotaoAdd, BotaoDeletar, CardConteiner, CardLembrete, FormConteiner, FormConteudo, Input, SubTitulo, TextoLembrete, TituloForm, TitleDataLembrete } from './EstiloLembrete';\r\n\r\n\r\nfunction Lembrete (){\r\n    \r\n    const [nomeLembrete, setNomeLembrete] = useState(\"\");\r\n    // useState salva o estado de qualquer tipo de dado\r\n    const [dataLembrete, setDataLembrete] = useState(\"\");\r\n    const [listaLembrete, setListaLembrete] = useState([]); //lista de lembrete\r\n\r\n\r\n    function Add (e){\r\n        e.preventDefault(); // não deixa a tela atualizar\r\n\r\n        /*pegar os dados que estão em nomeLembrete e dataLembrete\r\n        criar um objeto com eles {nomeLembrete, dataLembrete} \"lembrete\"*/\r\n        if(nomeLembrete.length>0 && dataLembrete.length>0){\r\n            const numeroId = Math.random();\r\n            const lembrete = {\r\n                nome: nomeLembrete,\r\n                data: new Date(dataLembrete), // converte para objeto Date\r\n                id: numeroId\r\n              }              \r\n            \r\n            //salvar na lista de lembrete -> setListaLembrete(objeto)\r\n            setListaLembrete([...listaLembrete, lembrete]);\r\n            setNomeLembrete(\"\"); \r\n            setDataLembrete(\"\"); //após a adição dos inputs, o valor (texto input) retorna para vazio\r\n        }else{\r\n            alert(\"Os campos devem estar preenchidos!\");\r\n        }        \r\n    }\r\n\r\n    function Deletar(id){\r\n        const listaFiltrada = listaLembrete.filter((item)=> item.id !== id);\r\n\r\n        //filtra a lista retirando o item pelo index\r\n        setListaLembrete(listaFiltrada);\r\n    }\r\n\r\n    function AlterarTexto(e){ //essa função faz com que quando eu altero o texto no input estabelecido, ele pega a string (pois o value é o que está escrito no input)\r\n                             //e vai alterar o estado de nomeLembrete\r\n        setNomeLembrete(e.target.value); // altera o vlaor do nomeLembrete com o value que está no input\r\n    }\r\n\r\n    function AlterarData(e){\r\n        setDataLembrete(e.target.value);\r\n    }\r\n\r\n    function SubmeterForm(e){ //quando tiver um Evento de submeter (linha 55), o evento (submit) não recarregará a página\r\n        e.preventDefault();\r\n    }\r\n\r\n        function AgruparLembretesPorData(lista) {\r\n        const grupos = {};\r\n    \r\n        lista.forEach((lembrete) => {\r\n            const data = new Date(lembrete.data);\r\n            data.setDate(data.getDate() + 1); // Adiciona 1 dia à data\r\n            const dia = data.getDate().toString().padStart(2, '0');\r\n            const mes = (data.getMonth() + 1).toString().padStart(2, '0');\r\n            const ano = data.getFullYear().toString();\r\n    \r\n            const dataFormatada = `${dia}/${mes}/${ano}`;\r\n    \r\n            if (!grupos[dataFormatada]) {\r\n                grupos[dataFormatada] = [];\r\n            }\r\n    \r\n            grupos[dataFormatada].push(lembrete);\r\n        });\r\n    \r\n        return grupos;\r\n    }\r\n\r\n    const LembretesPorData = AgruparLembretesPorData(listaLembrete);\r\n\r\n    return (\r\n        <AppConteiner>\r\n            <TituloForm>Novo Lembrete</TituloForm>\r\n            <FormConteiner onSubmit={SubmeterForm}>\r\n                <FormConteudo>\r\n                    <Input type=\"text\" placeholder=\"Nome do lembrete\" onChange={AlterarTexto} value={nomeLembrete} />\r\n                    <Input\r\n                        type=\"date\"\r\n                        placeholder=\"Data do lembrete (no formato dd/mm/yyyy)\"\r\n                        onChange={AlterarData}\r\n                        value={dataLembrete}\r\n                    />\r\n                    <div>\r\n                        <BotaoAdd onClick={Add}>Adicionar</BotaoAdd>\r\n                    </div>\r\n                </FormConteudo>\r\n            </FormConteiner>\r\n\r\n            <SubTitulo>\r\n  <h2>Lista de Lembretes &#x1F4CC;</h2>\r\n</SubTitulo>\r\n\r\n{Object.keys(LembretesPorData).map((data) => (\r\n\r\n  <div key={data}>\r\n    <TitleDataLembrete>{data}</TitleDataLembrete>\r\n    <CardConteiner>\r\n      {LembretesPorData[data].map((lembrete) => (\r\n        <CardLembrete key={lembrete.id}>\r\n          <TextoLembrete>\r\n            <p>{lembrete.hora}</p>\r\n            <p>{lembrete.nome}</p>\r\n          </TextoLembrete>\r\n          <BotaoDeletar onClick={() => Deletar(lembrete.id)}>X</BotaoDeletar>\r\n        </CardLembrete>\r\n      ))}\r\n    </CardConteiner>\r\n  </div>\r\n))}\r\n</AppConteiner>\r\n);\r\n}\r\n\r\nexport default Lembrete;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}