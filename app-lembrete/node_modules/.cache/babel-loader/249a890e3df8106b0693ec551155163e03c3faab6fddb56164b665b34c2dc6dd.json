{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pablo\\\\Desktop\\\\app-lembrete\\\\PabloMafra.github.io\\\\app-lembrete\\\\src\\\\components\\\\lembrete\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { AppConteiner, BotaoAdd, BotaoDeletar, CardConteiner, CardLembrete, FormConteiner, FormConteudo, Input, SubTitulo, TextoLembrete, TituloForm, TitleDataLembrete } from './EstiloLembrete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Lembrete() {\n  _s();\n  const [nomeLembrete, setNomeLembrete] = useState(\"\");\n  // useState salva o estado de qualquer tipo de dado\n  const [dataLembrete, setDataLembrete] = useState(\"\");\n  const [listaLembrete, setListaLembrete] = useState([]); //lista de lembrete\n\n  function Add(e) {\n    e.preventDefault(); // não deixa a tela atualizar\n\n    /*pegar os dados que estão em nomeLembrete e dataLembrete\r\n    criar um objeto com eles {nomeLembrete, dataLembrete} \"lembrete\"*/\n    if (nomeLembrete.length > 0 && dataLembrete.length > 0) {\n      const numeroId = Math.random();\n      const lembrete = {\n        nome: nomeLembrete,\n        data: new Date(dataLembrete),\n        // converte para objeto Date\n        id: numeroId\n      };\n\n      //salvar na lista de lembrete -> setListaLembrete(objeto)\n      setListaLembrete([...listaLembrete, lembrete]);\n      setNomeLembrete(\"\");\n      setDataLembrete(\"\"); //após a adição dos inputs, o valor (texto input) retorna para vazio\n    } else {\n      alert(\"Os campos devem estar preenchidos!\");\n    }\n  }\n  function Deletar(id) {\n    const listaFiltrada = listaLembrete.filter(item => item.id !== id);\n\n    //filtra a lista retirando o item pelo index\n    setListaLembrete(listaFiltrada);\n  }\n  function AlterarTexto(e) {\n    //essa função faz com que quando eu altero o texto no input estabelecido, ele pega a string (pois o value é o que está escrito no input)\n    //e vai alterar o estado de nomeLembrete\n    setNomeLembrete(e.target.value); // altera o vlaor do nomeLembrete com o value que está no input\n  }\n\n  function AlterarData(e) {\n    setDataLembrete(e.target.value);\n  }\n  function SubmeterForm(e) {\n    //quando tiver um Evento de submeter (linha 55), o evento (submit) não recarregará a página\n    e.preventDefault();\n  }\n  function AgruparLembretesPorData(lista) {\n    const grupos = {};\n    lista.forEach(lembrete => {\n      const data = new Date(lembrete.data);\n      data.setDate(data.getDate() + 1); // Adiciona 1 dia à data\n      const dia = data.getDate().toString().padStart(2, '0');\n      const mes = (data.getMonth() + 1).toString().padStart(2, '0');\n      const ano = data.getFullYear().toString();\n      const dataFormatada = `${dia}/${mes}/${ano}`;\n      if (!grupos[dataFormatada]) {\n        grupos[dataFormatada] = [];\n      }\n      grupos[dataFormatada].push(lembrete);\n    });\n    return grupos;\n  }\n  const LembretesPorData = AgruparLembretesPorData(listaLembrete);\n  return /*#__PURE__*/_jsxDEV(AppConteiner, {\n    children: [/*#__PURE__*/_jsxDEV(TituloForm, {\n      children: \"Novo Lembrete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormConteiner, {\n      onSubmit: SubmeterForm,\n      children: /*#__PURE__*/_jsxDEV(FormConteudo, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"Nome do lembrete\",\n          onChange: AlterarTexto,\n          value: nomeLembrete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"date\",\n          placeholder: \"Data do lembrete (no formato dd/mm/yyyy)\",\n          onChange: AlterarData,\n          value: dataLembrete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(BotaoAdd, {\n            onClick: Add,\n            children: \"Adicionar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SubTitulo, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lista de Lembretes \\uD83D\\uDCCC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), Object.keys(LembretesPorData).map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TitleDataLembrete, {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CardConteiner, {\n        children: LembretesPorData[data].map(lembrete => /*#__PURE__*/_jsxDEV(CardLembrete, {\n          children: [/*#__PURE__*/_jsxDEV(TextoLembrete, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: lembrete.hora\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: lembrete.nome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(BotaoDeletar, {\n            onClick: () => Deletar(lembrete.id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this)]\n        }, lembrete.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)]\n    }, data, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(Lembrete, \"5AL3O9/fmu1mealEiFR1l/VmfKs=\");\n_c = Lembrete;\nexport default Lembrete;\nvar _c;\n$RefreshReg$(_c, \"Lembrete\");","map":{"version":3,"names":["useState","AppConteiner","BotaoAdd","BotaoDeletar","CardConteiner","CardLembrete","FormConteiner","FormConteudo","Input","SubTitulo","TextoLembrete","TituloForm","TitleDataLembrete","jsxDEV","_jsxDEV","Lembrete","_s","nomeLembrete","setNomeLembrete","dataLembrete","setDataLembrete","listaLembrete","setListaLembrete","Add","e","preventDefault","length","numeroId","Math","random","lembrete","nome","data","Date","id","alert","Deletar","listaFiltrada","filter","item","AlterarTexto","target","value","AlterarData","SubmeterForm","AgruparLembretesPorData","lista","grupos","forEach","setDate","getDate","dia","toString","padStart","mes","getMonth","ano","getFullYear","dataFormatada","push","LembretesPorData","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","onClick","Object","keys","map","hora","_c","$RefreshReg$"],"sources":["C:/Users/pablo/Desktop/app-lembrete/PabloMafra.github.io/app-lembrete/src/components/lembrete/index.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { AppConteiner, BotaoAdd, BotaoDeletar, CardConteiner, CardLembrete, FormConteiner, FormConteudo, Input, SubTitulo, TextoLembrete, TituloForm, TitleDataLembrete } from './EstiloLembrete';\r\n\r\n\r\nfunction Lembrete (){\r\n    \r\n    const [nomeLembrete, setNomeLembrete] = useState(\"\");\r\n    // useState salva o estado de qualquer tipo de dado\r\n    const [dataLembrete, setDataLembrete] = useState(\"\");\r\n    const [listaLembrete, setListaLembrete] = useState([]); //lista de lembrete\r\n\r\n\r\n    function Add (e){\r\n        e.preventDefault(); // não deixa a tela atualizar\r\n\r\n        /*pegar os dados que estão em nomeLembrete e dataLembrete\r\n        criar um objeto com eles {nomeLembrete, dataLembrete} \"lembrete\"*/\r\n        if(nomeLembrete.length>0 && dataLembrete.length>0){\r\n            const numeroId = Math.random();\r\n            const lembrete = {\r\n                nome: nomeLembrete,\r\n                data: new Date(dataLembrete), // converte para objeto Date\r\n                id: numeroId\r\n              }              \r\n            \r\n            //salvar na lista de lembrete -> setListaLembrete(objeto)\r\n            setListaLembrete([...listaLembrete, lembrete]);\r\n            setNomeLembrete(\"\"); \r\n            setDataLembrete(\"\"); //após a adição dos inputs, o valor (texto input) retorna para vazio\r\n        }else{\r\n            alert(\"Os campos devem estar preenchidos!\");\r\n        }        \r\n    }\r\n\r\n    function Deletar(id){\r\n        const listaFiltrada = listaLembrete.filter((item)=> item.id !== id);\r\n\r\n        //filtra a lista retirando o item pelo index\r\n        setListaLembrete(listaFiltrada);\r\n    }\r\n\r\n    function AlterarTexto(e){ //essa função faz com que quando eu altero o texto no input estabelecido, ele pega a string (pois o value é o que está escrito no input)\r\n                             //e vai alterar o estado de nomeLembrete\r\n        setNomeLembrete(e.target.value); // altera o vlaor do nomeLembrete com o value que está no input\r\n    }\r\n\r\n    function AlterarData(e){\r\n        setDataLembrete(e.target.value);\r\n    }\r\n\r\n    function SubmeterForm(e){ //quando tiver um Evento de submeter (linha 55), o evento (submit) não recarregará a página\r\n        e.preventDefault();\r\n    }\r\n\r\n        function AgruparLembretesPorData(lista) {\r\n        const grupos = {};\r\n    \r\n        lista.forEach((lembrete) => {\r\n            const data = new Date(lembrete.data);\r\n            data.setDate(data.getDate() + 1); // Adiciona 1 dia à data\r\n            const dia = data.getDate().toString().padStart(2, '0');\r\n            const mes = (data.getMonth() + 1).toString().padStart(2, '0');\r\n            const ano = data.getFullYear().toString();\r\n    \r\n            const dataFormatada = `${dia}/${mes}/${ano}`;\r\n    \r\n            if (!grupos[dataFormatada]) {\r\n                grupos[dataFormatada] = [];\r\n            }\r\n    \r\n            grupos[dataFormatada].push(lembrete);\r\n        });\r\n    \r\n        return grupos;\r\n    }\r\n\r\n    const LembretesPorData = AgruparLembretesPorData(listaLembrete);\r\n\r\n    return (\r\n        <AppConteiner>\r\n            <TituloForm>Novo Lembrete</TituloForm>\r\n            <FormConteiner onSubmit={SubmeterForm}>\r\n                <FormConteudo>\r\n                    <Input type=\"text\" placeholder=\"Nome do lembrete\" onChange={AlterarTexto} value={nomeLembrete} />\r\n                    <Input\r\n                        type=\"date\"\r\n                        placeholder=\"Data do lembrete (no formato dd/mm/yyyy)\"\r\n                        onChange={AlterarData}\r\n                        value={dataLembrete}\r\n                    />\r\n                    <div>\r\n                        <BotaoAdd onClick={Add}>Adicionar</BotaoAdd>\r\n                    </div>\r\n                </FormConteudo>\r\n            </FormConteiner>\r\n\r\n            <SubTitulo>\r\n  <h2>Lista de Lembretes &#x1F4CC;</h2>\r\n</SubTitulo>\r\n\r\n{Object.keys(LembretesPorData).map((data) => (\r\n\r\n  <div key={data}>\r\n    <TitleDataLembrete>{data}</TitleDataLembrete>\r\n    <CardConteiner>\r\n      {LembretesPorData[data].map((lembrete) => (\r\n        <CardLembrete key={lembrete.id}>\r\n          <TextoLembrete>\r\n            <p>{lembrete.hora}</p>\r\n            <p>{lembrete.nome}</p>\r\n          </TextoLembrete>\r\n          <BotaoDeletar onClick={() => Deletar(lembrete.id)}>X</BotaoDeletar>\r\n        </CardLembrete>\r\n      ))}\r\n    </CardConteiner>\r\n  </div>\r\n))}\r\n</AppConteiner>\r\n);\r\n}\r\n\r\nexport default Lembrete;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}